{
  "version": "2",
  "templates": [
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "This app deploys a LoRaWAN gateway with Basics™ Station Packet Forward protocol using Docker.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "SX1301",
          "label": "MODEL",
          "name": "MODEL",
          "description": "The model is defined depending on either the version of the Semtech chip model: SX1301, SX1302 and SX1303, or concentrator modules, or RAK WisGate Development gateway model. Check Define your MODEL section on https://github.com/xoseperez/basicstation for more details."
        },
        {
          "default": "/dev/spidev0.0",
          "label": "Device",
          "name": "DEVICE",
          "description": "Where the concentrator is connected to"
        },
        {
          "name": "INTERFACE",
          "label": "Concentrator interface",
          "select": [
            {
              "text": "SPI",
              "value": "SPI"
            },
            {
              "text": "USB",
              "value": "USB"
            }
          ],
          "description": "The interface used by the concentrator, can be guessed from Device"
        },
        {
          "default": "17",
          "label": "Gateway RESET GPIO:",
          "name": "GW_RESET_GPIO:",
          "description": "GPIO number that resets (Broadcom pin number)"
        },
        {
          "default": "0",
          "label": "Gateway ENABLE GPIO",
          "name": "GW_ENABLE_GPIO",
          "description": "GPIO number that enables power (by pulling HIGH) to the concentrator (Broadcom pin number)"
        },
        {
          "default": "eth0",
          "label": "GATEWAY EUI NIC",
          "name": "GATEWAY_EUI_NIC",
          "description": "Interface to use when generating the EUI"
        },
        {
          "label": "GATEWAY EUI",
          "name": "GATEWAYEUI",
          "description": "Gateway EUI to use, autogenerated from GATEWAY EUI NIC if defined, otherwise in order from: eth0, wlan0, usb0"
        },
        {
          "default": "eu1",
          "label": "TTN REGION",
          "name": "TTN_REGION",
          "description": "Region of the TTN server to use, possible values: eu1, nam1, au1"
        },
        {
          "default": "change this to your own TC key from TTN",
          "label": "TC KEY",
          "name": "TC_KEY",
          "description": "Unique TTN Gateway Key used for TTS Community Edition pasted from TTN console"
        }
      ],
      "image": "xoseperez/basicstation:v2",
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/gateway_logo.png",
      "name": "BasicsStation",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "LoRa Basics™ Station for Docker",
      "type": 1,
      "network": "host",
      "privileged": true,
      "hostname": "basicstation",
      "note": "Check <a href='https://github.com/xoseperez/basicstation'>LoRa Basics™ Station for Docker Github repository</a> for more details."
    },
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "This app dockerize the rak_common_for_gateway project, which aim to help users to use the RAK Raspberry Pi Developer Gateway more easily.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "MODEL",
          "label": "RAK gateway model/RAK WisLink LPWAN module",
          "select": [
            {
              "text": "RAK7243/RAK7244(no LTE)",
              "value": "RAK7244"
            },
            {
              "text": "RAK7243C/RAK7244C(with LTE)",
              "value": "RAK7244C"
            },
            {
              "text": "RAK7246",
              "value": "RAK7246"
            },
            {
              "text": "RAK7246G",
              "value": "RAK7246G"
            },
            {
              "text": "RAK7248(no LTE)",
              "value": "RAK7248"
            },
            {
              "text": "RAK7248C(with LTE)",
              "value": "RAK7248C"
            },
            {
              "text": "RAK7271",
              "value": "RAK7271"
            },
            {
              "text": "RAK7371",
              "value": "RAK7371"
            },
            {
              "text": "RAK831(SPI only)",
              "value": "RAK831"
            },
            {
              "text": "RAK2245(SPI only)",
              "value": "RAK2245"
            },
            {
              "text": "RAK2247(USB)",
              "value": "RAK2247_USB"
            },
            {
              "text": "RAK2247(SPI)",
              "value": "RAK2247_SPI"
            },
            {
              "text": "RAK833(USB)",
              "value": "RAK833_USB"
            },
            {
              "text": "RAK833(SPI)",
              "value": "RAK833_SPI"
            },
            {
              "text": "RAK2246(SPI only)",
              "value": "RAK2246"
            },
            {
              "text": "RAK2287(SPI/USB)",
              "value": "RAK2287"
            },
            {
              "text": "RAK5146(SPI/USB)",
              "value": "RAK5146"
            }
          ],
          "description": "RAKwireless Developer gateway model or RAKwireless WisLink LPWAN module. Once defined, we take care of all the concentrator configurations and you can skip to option <Interface for gateway EUI>"
        },
        {
          "name": "CONCENTRATOR",
          "label": "Semtech concentrator",
          "select": [
            {
              "text": "SX1301",
              "value": "SX1301"
            },
            {
              "text": "SX1302",
              "value": "SX1302"
            },
            {
              "text": "SX1303",
              "value": "SX1303"
            },
            {
              "text": "SX1308",
              "value": "SX1308"
            }
          ],
          "description": "If RAK gateway model is not defined, you can define <Semtech concentrator> instead. Once defined this env variable, also need to specify other features of the module, for example, <Concentrator interface>,<HAS GPS>,<HAS LTE>."
        },
        {
          "name": "INTERFACE",
          "label": "Concentrator interface",
          "default": "SPI",
          "select": [
            {
              "text": "SPI",
              "value": "SPI"
            },
            {
              "text": "USB",
              "value": "USB"
            }
          ],
          "description": "If MODEL is defined it will get the interface type from it, otherwise defaults to SPI"
        },
        {
          "name": "HAS_GPS",
          "label": "Has GPS",
          "default": "1",
          "select": [
            {
              "text": "True",
              "value": "1"
            },
            {
              "text": "False",
              "value": "0"
            }
          ],
          "description": "If MODEL is defined it will get this from it, otherwise defaults to 1 (with GPS)"
        },
        {
          "name": "HAS_LTE",
          "label": "Has LTE",
          "default": "0",
          "select": [
            {
              "text": "True",
              "value": "1"
            },
            {
              "text": "False",
              "value": "0"
            }
          ],
          "description": "If MODEL id defined it will get this from it, otherwise defaults to 0 (without LTE)"
        },
        {
          "name": "RESET_GPIO",
          "default": "17",
          "label": "GATEWAY RESET GPIO",
          "description": "GPIO number that resets (Broadcom pin number)"
        },
        {
          "name": "POWER_EN_GPIO",
          "default": "0",
          "label": "the GPIO enables power",
          "description": "GPIO number that enables power (by pulling HIGH) to the concentrator (Broadcom pin number). 0 means not required"
        },
        {
          "name": "RADIO_DEV",
          "label": "Where the concentrator is connected to",
          "description": "Don't set it if you don't know what this means, /dev/spidev0.0 for SPI concentrators, /dev/ttyACM0 for USB concentrators."
        },
        {
          "name": "GPS_DEV",
          "label": "Where the GPS is connected to",
          "description": "Don't set it if you don't know what this means, /dev/ttyAMA0 except when HAS_LTE is 1, in this case it will default to /dev/i2c-1. "
        },
        {
          "name": "GATEWAY_EUI_NIC",
          "label": "Interface for gateway EUI",
          "default": "eth0",
          "description": "Interface to use when generating the EUI, default to eth0"
        },
        {
          "name": "GATEWAY_EUI",
          "label": "Gateway EUI",
          "description": "Autogenerated from GATEWAY_EUI_NIC if defined, otherwise in order from: eth0, wlan0, usb0"
        },
        {
          "name": "TTN_REGION",
          "label": "TTN region",
          "default": "eu1",
          "description": "If using a TTN server, region of the TTN server to use. Can be eu1, nam1, and au1"
        },
        {
          "name": "SERVER_HOST",
          "label": "Host Server URL",
          "description": "If TTN_REGION is defined it will build the right address for the TTN server"
        },
        {
          "name": "SERVER_PORT",
          "label": "Server port",
          "default": "1700",
          "description": "Port the server is listening to"
        },
        {
          "name": "BAND",
          "label": "TTN Frequency Plan",
          "default": "eu_863_870",
          "select": [
            {
              "text": "as_915_921",
              "value": "as_915_921"
            },
            {
              "text": "as_915_928",
              "value": "as_915_928"
            },
            {
              "text": "as_917_920",
              "value": "as_917_920"
            },
            {
              "text": "as_920_923",
              "value": "as_920_923"
            },
            {
              "text": "au_915_928",
              "value": "au_915_928"
            },
            {
              "text": "cn_470_510",
              "value": "cn_470_510"
            },
            {
              "text": "eu_433",
              "value": "eu_433"
            },
            {
              "text": "eu_863_870",
              "value": "eu_863_870"
            },
            {
              "text": "in_865_867",
              "value": "in_865_867"
            },
            {
              "text": "kr_920_923",
              "value": "kr_920_923"
            },
            {
              "text": "ru_864_870",
              "value": "ru_864_870"
            },
            {
              "text": "us_902_928",
              "value": "us_902_928"
            }
          ],
          "description": "Regional parameters identifier"
        },
        {
          "name": "GPS_LATITUDE",
          "label": "GPS LATITUDE",
          "description": "Report this latitude for the gateway"
        },
        {
          "name": "GPS_LONGITUDE",
          "label": "GPS LONGITUDE",
          "description": "Report this longitude for the gateway"
        },
        {
          "name": "GPS_ALTITUDE",
          "label": "GPS ALTITUDE",
          "description": "Report this altitude for the gateway"
        }
      ],
      "image": "rakwireless/udp-packet-forwarder:latest",
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/gateway_logo.png",
      "name": "UDPPacketForwarder",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "UDP Packet Forwarder",
      "type": 1,
      "network": "host",
      "privileged": true,
      "note": "Check <a href='https://github.com/RAKWireless/udp-packet-forwarder'>LoRaWAN UDP Packet Forwarder Protocol for Docker Github repository</a> for more details.",
      "hostname": "UDP"
    },
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "This project deploys UDP Packet Forwarder protocol for LoRa 2.4GHz Gateways using Docker. It runs on any amd64/x86_64 PC, or a SBC like a Raspberry Pi 3/4, Compute Module 3/4 or balenaFin.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "Device",
          "default": "/dev/ttyACM0",
          "label": "Concentrator port",
          "description": "Where the concentrator is connected to."
        },
        {
          "name": "TTN_REGION",
          "label": "TTN region",
          "default": "eu1",
          "description": "If using a TTN server, region of the TTN server to use. Can be eu1, nam1, and au1"
        },
        {
          "name": "SERVER_HOST",
          "label": "Host Server URL",
          "description": "If TTN_REGION is defined it will build the right address for the TTN server"
        },
        {
          "name": "SERVER_PORT",
          "label": "Server port",
          "default": "1700",
          "description": "Port the server is listening to"
        },
        {
          "name": "GPS_LATITUDE",
          "label": "GPS LATITUDE",
          "description": "Report this latitude for the gateway"
        },
        {
          "name": "GPS_LONGITUDE",
          "label": "GPS LONGITUDE",
          "description": "Report this longitude for the gateway"
        },
        {
          "name": "GPS_ALTITUDE",
          "label": "GPS ALTITUDE",
          "description": "Report this altitude for the gateway"
        }
      ],
      "image": "xoseperez/2g4-packet-forwarder:latest",
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/gateway_logo.png",
      "name": "2g4PacketForwarder",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "2.4GHz Gateway UDP Packet Forwarder",
      "type": 1,
      "note": "Check <a href='https://github.com/RAKWireless/udp-packet-forwarder'>LoRaWAN UDP Packet Forwarder Protocol for Docker Github repository</a> for more details.",
      "hostname": "2g4-packet-forwarder"
    },
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "The Helium gateway-rs is a service designed to run on Linux-based LoRaWAN gateways. It's intended to run alongside a typical LoRa packet forwarder and to connect via Semtech's Gateway Messaging Protocol. It does not mine HNT for now but can be used to increase coverage on the Helium network.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "version",
          "default": "latest",
          "label": "Version of gateway-rs package ",
          "description": "Version of gateway-rs package, default is set to the latest. You can specify a history version, for example, v1.0.0-alpha.29. Please check the release note at https://github.com/helium/gateway-rs/releases"
        },
        {
          "name": "platform",
          "label": "Supported Platforms",
          "default": "raspi_64",
          "description": "Check the Supported Platform section on https://github.com/helium/gateway-rs to see if your platfrom is on the list"
        },
        {
          "name": "region",
          "label": "Region",
          "default": "US915",
          "select": [
            {
              "text": "US915",
              "value": "US915"
            },
            {
              "text": "EU868",
              "value": "EU868"
            },
            {
              "text": "EU433",
              "value": "EU433"
            },
            {
              "text": "CN470",
              "value": "CN470"
            },
            {
              "text": "CN779",
              "value": "CN779"
            },
            {
              "text": "AU915",
              "value": "AU915"
            },
            {
              "text": "AS923_1",
              "value": "AS923_1"
            },
            {
              "text": "AS923_2",
              "value": "AS923_2"
            },
            {
              "text": "AS923_3",
              "value": "AS923_3"
            },
            {
              "text": "AS923_4",
              "value": "AS923_4"
            },
            {
              "text": "KR920",
              "value": "KR920"
            },
            {
              "text": "IN865",
              "value": "IN865"
            }
          ],
          "description": "Possible valuess for regional parameters"
        }
      ],
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/helium_logo.png",
      "title": "Helium gateway-rs",
      "name": "Helium-gateway-rs",
      "platform": "linux",
      "image": "sheng2216/helium:latest",
      "network": "host",
      "volumes": [
        {
          "bind": "/etc/helium_gateway",
          "container": "/etc/helium_gateway"
        }
      ],
      "command": "/bin/bash -c /app/start.sh",
      "restart_policy": "unless-stopped",
      "type": 1,
      "privileged": true,
      "note": "The image comes with helium/gateway-rs & helium-wallet packages.<br>Start the UDP packet forwarder service first, make sure to set the packet forwarder to forward to the (default) configured helium-gateway on 127.0.0.1 at udp port 1680.<br>The <strong>gateway_key.bin</strong> file is stored under <strong>/etc/helium_gateway</strong> on your host by default.<br>Use the command <strong>docker exec {container name} helium_gateway key info </strong>on your host to get the public key address and animal name.<br>Check <a href='https://github.com/helium/gateway-rs'>Helium gateway-rs Github Repository</a> for more details."
    },
    {
      "categories": [
        "Home Automation"
      ],
      "description": "Node-RED is a flow-based development tool for visual programming.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "False",
          "label": "Enable the projects feature",
          "name": "NODE_RED_ENABLE_PROJECTS",
          "select": [
            {
              "text": "Enable",
              "value": "true"
            },
            {
              "text": "Disable",
              "value": "false"
            }
          ]
        }
      ],
      "logo": "https://nodered.org/about/resources/media/node-red-icon-2.png",
      "title": "NodeRed",
      "name": "NodeRed",
      "platform": "linux",
      "network": "bridge",
      "repository": {
        "stackfile": "Stack/nodered/nodered.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "type": 3,
      "note": "Browse to <a herf='http://{host-ip}:1880'>http://{host-ip}:1880</a> to access the web interface.<br>Check <a href='https://nodered.org/docs/getting-started/docker'>Node-RED docker quick start guide</a> for more details."
    },
    {
      "categories": [
        "Home Automation"
      ],
      "description": "Zigbee2MQTT is a nodejs Gateway application that connects Zigbee networks to MQTT networks.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "true",
          "label": "Allow new devices to join",
          "name": "ZIGBEE2MQTT_CONFIG_PERMIT_JOIN",
          "select": [
            {
              "text": "Enable",
              "value": "true"
            },
            {
              "text": "Disable",
              "value": "false"
            }
          ]
        },
        {
          "default": "zigbee2mqtt",
          "label": "MQTT base topic",
          "name": "ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC",
          "description": "Default MQTT base topic"
        },
        {
          "default": "mqtt://mqtt",
          "label": "MQTT server address",
          "name": "ZIGBEE2MQTT_CONFIG_MQTT_SERVER",
          "description": "MQTT server address"
        },
        {
          "default": "/dev/ttyUSB0",
          "label": "Zigbee Adapter path",
          "name": "ZIGBEE2MQTT_CONFIG_SERIAL_PORT",
          "description": "Zigbee Adapter path, for example, the serial port the adapter connected to:"
        },
        {
          "default": "true",
          "label": "Enable the Zigbee2MQTT frontend",
          "name": "ZIGBEE2MQTT_CONFIG_FRONTEND",
          "select": [
            {
              "text": "Enable",
              "value": "true"
            },
            {
              "text": "Disable",
              "value": "false"
            }
          ]
        },
        {
          "default": "8002",
          "label": "Frontend external port",
          "name": "external_port ",
          "description": "Frontend external port bind to Zigbee2MQTT service's 8080 port. Browse to http://{host-ip}:<Frontend external port> to access the web interface."
        }
      ],
      "logo": "https://www.zigbee2mqtt.io/logo.png",
      "name": "Zigbee2MQTT",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/zigbee2mqtt/zigbee2mqtt.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "Zigbee2MQTT",
      "network": "bridge",
      "type": 3,
      "note": "Browse to <a href='http://{host-ip}:<8002'>http://{host-ip}:8002</a> to access the web interface, or change the external port number to your customised port number. Check <a href='https://www.zigbee2mqtt.io/guide/configuration/'>Zigbee2MQTT configuration guide</a> for more details."
    },
    {
      "categories": [
        "File Sync & Share"
      ],
      "description": "Seafile is an open source file sync&share solution designed for high reliability, performance and productivity.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "db_dev",
          "label": "MySQL service's root password ",
          "name": "MYSQL_ROOT_PASSWORD",
          "description": "Requested, set the root's password of MySQL service"
        },
        {
          "default": "me@example.com",
          "label": "Seafile admin user email",
          "name": "SEAFILE_ADMIN_EMAIL",
          "description": "Specifies Seafile admin user, default is 'me@example.com'."
        },
        {
          "default": "changeme",
          "label": "Seafile admin user password",
          "name": "SEAFILE_ADMIN_PASSWORD",
          "description": "Seafile admin password, default is 'changeme'"
        },
        {
          "default": "false",
          "label": "Whether to use https or not",
          "name": "SEAFILE_SERVER_LETSENCRYPT",
          "description": "Whether to use https or not. If https is enabled, please publish port 443 manually",
          "select": [
            {
              "text": "Enable",
              "value": "true"
            },
            {
              "text": "Disable",
              "value": "false"
            }
          ]
        },
        {
          "default": "docs.seafile.com",
          "label": "Seafile Server_HOSTNAME",
          "name": "SEAFILE_SERVER_HOSTNAME",
          "description": "Specifies your host name if https is enabled."
        }
      ],
      "logo": "https://manual.seafile.com/media/seafile-transparent-1024.png",
      "name": "Seafile",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/seafile/seafile.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "Seafile",
      "type": 3,
      "note": "Browse to <a href='http://{host-ip}:<80'>http://{host-ip}:80</a> to access the web interface. HTTPS is not enabled by default.<br>After login, please go to <b>System admin</b> on top right, then navigate to <b>Settings</b>, and change the <b>FILE_SERVER_ROOT</b> URL to http://{host-ip}/seafhttp.<br>Check <a href='https://manual.seafile.com/docker/deploy_seafile_with_docker/'>Seafile Community Installation Guide</a> for more details."
    },
    {
      "categories": [
        "VPN"
      ],
      "description": "Tailscale is a zero config VPN. It can be Installed on any device in minutes, it manages firewall rules for users, and works from anywhere. ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "label": "TS_AUTH_KEY",
          "name": "TS_AUTH_KEY",
          "description": "Pre-authentication keys (“auth keys” for short) let you register new nodes without needing to sign in via a web browser, check https://tailscale.com/kb/1085/auth-keys/ for more details."
        }
      ],
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/tailscale_logo.png?raw=true",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/tailscale/tailscale.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "Tailscale",
      "name": "Tailscale",
      "type": 3,
      "note": "Create an account at <a href='https://tailscale.com/'>Tailscale</a> first, and then check <a href='https://tailscale.com/kb/1085/auth-keys/'>Tailscale's official documentation</a> on how to generate an authkey.<br>Copy the key and fill in to the <b>TS_AUTH_KEY</b> variable below, and then deploy the service"
    },
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "The ChirpStack open-source LoRaWAN Network Server stack provides open-source components for LoRaWAN networks.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "EU868",
          "label": "Network Server Band",
          "name": "NETWORK_SERVER__BAND__NAME",
          "description": "Frequency channels used by Chirpstack for uplink transmissions, valid values are AU915, EU868, US915 ... "
        }
      ],
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/chirpstack_logo.png?raw=true",
      "name": "ChirpStackNetworkServer",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/chirpstack/chirpstack.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "ChirpStack Network Server",
      "network": "bridge",
      "type": 3,
      "note": "Browse to <a href='http://{host-ip}:8080'>http://{host-ip}:8080</a> to access the web interface.<ulstyle='padding-left:20px'><li>Default username: admin</li><li>Default password: admin</li>Check <a href='https://github.com/brocaar/chirpstack-docker'>ChirpStack Docker Github reposotory</a> for more details."
    },
    {
      "categories": [
        "LoRaWAN"
      ],
      "description": "The Things Stack LNS establishes a data connection between a LoRa Basics™ Station gateway and a Network Server (in this case, The Things Stack).",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "label": "TTS DOMAIN",
          "name": "TTS_DOMAIN",
          "description": "set this to the IP or domain name of the host you will be using to access the stack "
        }
      ],
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/the_things_stack_logo.jpg?raw=true",
      "name": "TheThingsStackLNS",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/thethingsstack/thethingsstack.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "The Things Stack LNS",
      "network": "bridge",
      "type": 3,
      "note": "Point your browser to the first local IP of the device or to the domain name (if you have defined one) using HTTPS to access the web interface.<ulstyle='padding-left:20px'><li>Default username: admin</li><li>Default password: changeme</li>Check <a href='https://github.com/xoseperez/the-things-stack-docker'>The Things Stack LoRaWAN Network Server Github repository</a> for more details. "
    },
    {
      "categories": [
        "Other"
      ],
      "description": "Eclipse Mosquitto is an open source implementation of a server for versions 5, 3.1.1, and 3.1 of the MQTT protocol.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        }
      ],
      "image": "eclipse-mosquitto:2",
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/mosquitto_logo.png?raw=true",
      "name": "Mosquitto",
      "platform": "linux",
      "ports": [
        "1883:1883/tcp",
        "9001:9001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Eclipse Mosquitto",
      "type": 1,
      "volumes": [
        {
          "bind": "mosquitto_data",
          "container": "/mosquitto/data"
        },
        {
          "bind": "mosquitto_log",
          "container": "/mosquitto/log"
        }
      ],
      "network": "bridge",
      "note": "Check <a href='https://hub.docker.com/_/eclipse-mosquitto'>Eclipse-Mosquitto Dockerhub quick reference</a> for more details."
    },
    {
      "categories": [
        "Data visulization"
      ],
      "description": "Grafana is a multi-platform open source analytics and interactive visualization web application.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "grafana-clock-panel,grafana-simple-json-datasource",
          "label": "Grafana plugins",
          "name": "GF_INSTALL_PLUGINS",
          "description": "Pass the plugins you want installed to Docker with the GF_INSTALL_PLUGINS environment variable as a comma-separated list. "
        }
      ],
      "image": "grafana/grafana-enterprise:8.4.4",
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/grafana_logo.png?raw=true",
      "name": "Grafana",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Grafana",
      "type": 1,
      "volumes": [
        {
          "bind": "grafana-storage",
          "container": "/var/lib/grafana"
        }
      ],
      "network": "bridge",
      "note": "Browse to <a href='http://{host-ip}:3000'>http://{host-ip}:3000</a> to access the web interface.<ulstyle='padding-left:20px'><li>Default username: admin</li><li>Default password: admin</li>Check <a href='https://grafana.com/docs/grafana/latest/installation/docker/'>Run Grafana Docker image quick reference</a> for more details."
    },
    {
      "categories": [
        "Database"
      ],
      "description": "InfluxDB is a time series database built from the ground up to handle high write and query loads.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_MODE",
          "label": "Influx initial mode",
          "default": "setup",
          "description": "Set DOCKER_INFLUXDB_INIT_MODE to setup enables the InfluxDB image to automatically bootstrap the system."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_USERNAME",
          "label": "Influx initial username",
          "default": "Required",
          "description": "The username to set for the system's initial super-user (Required)."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_PASSWORD",
          "label": "Influx initial password",
          "default": "changeme",
          "description": "The password to set for the system's inital super-user (Required,at least 8 characters)."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_ORG",
          "label": "Influx initial organization",
          "default": "Required",
          "description": "The name to set for the system's initial organization (Required)."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_BUCKET",
          "label": "Influx initial bucket",
          "default": "Required",
          "description": "The name to set for the system's initial bucket (Required)."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_RETENTION",
          "label": "Influx initial bucket retain data duration",
          "description": "Optional. E.g. 1w means tetain te data for 1 week. If not set, the initial bucket will retain data forever."
        },
        {
          "name": "DOCKER_INFLUXDB_INIT_ADMIN_TOKEN",
          "label": "initial super-user's authentication token to associate with the system's ",
          "description": "Optional. The authentication token to associate with the system's initial super-user. If not set, a token will be auto-generated by the system."
        }
      ],
      "image": "influxdb:1.8",
      "logo": "https://influxdata.github.io/branding/img/downloads/influxdata-logo--symbol--pool.svg",
      "name": "InfluxDB",
      "platform": "linux",
      "ports": [
        "8086:8086/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "InfluxDB",
      "type": 1,
      "volumes": [
        {
          "bind": "/influxdb2/data",
          "container": "/var/lib/influxdb2"
        },
        {
          "bind": "/influxdb2/config",
          "container": "/etc/influxdb2"
        }
      ],
      "network": "bridge",
      "note": "Check <a href='https://hub.docker.com/_/influxdb'>InfluxDB Dockerhub quick reference</a> for more details."
    },
    {
      "categories": [
        "Data Collection"
      ],
      "description": "Telegraf is an agent for collecting metrics and writing them to InfluxDB or other outputs.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "/hostfs",
          "label": "HOST_MOUNT_PREFIX",
          "name": "HOST_MOUNT_PREFIX"
        },
        {
          "default": "/hostfs/etc",
          "label": "HOST_ETC",
          "name": "HOST_ETC"
        },
        {
          "default": "/hostfs/proc",
          "label": "HOST_PROC",
          "name": "HOST_PROC"
        },
        {
          "default": "/hostfs/sys",
          "label": "HOST_SYS",
          "name": "HOST_SYS"
        }
      ],
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/telegraf_logo.png?raw=true",
      "name": "telegraf",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Telegraf",
      "type": 3,
      "repository": {
        "stackfile": "Stack/telegraf/telegraf.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "network": "bridge",
      "note": "The default configuration requires a running InfluxDB instance as an output plugin. <li>Ensure that InfluxDB is running on port 8086 before starting the Telegraf container.</li><li> Browse to <a href='https://hub.docker.com/_/telegraf'>Telegraf dockerhub quick reference</a> for more details.</li>"
    },
    {
      "categories": [
        "Data visulization"
      ],
      "description": "ThingsBoard allows you to create rich IoT Dashboards for data visualization and remote device control in real-time",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "TB_QUEUE_TYPE",
          "label": "ThingsBoard queue service",
          "default": "in-memory",
          "description": "ThingsBoard uses various messaging systems/brokers for storing the messages and communication between ThingsBoard services. Check https://thingsboard.io/docs/user-guide/install/docker/?ubuntuThingsboardQueue=inmemory for more details"
        }
      ],
      "image": "thingsboard/tb-postgres:3.3.4",
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/thingsboard_logo.jpg?raw=true",
      "name": "ThingsBoard",
      "platform": "linux",
      "title": "ThingsBoard",
      "network": "bridge",
      "ports": [
        "9090:9090/tcp",
        "2883:1883/tcp",
        "7070:7070/tcp",
        "5683:5683/udp",
        "5684:5684/udp",
        "5685:5685/udp",
        "5686:5686/udp",
        "5687:5687/udp",
        "5688:5688/udp"
      ],
      "volumes": [
        {
          "auto": "~/.mytb-data",
          "container": "/data"
        },
        {
          "auto": "~/.mytb-logs",
          "container": "/var/log/thingsboard"
        }
      ],
      "restart_policy": "unless-stopped",
      "type": 1,
      "note": "Browse to <a href='http://{host-ip}:8080'>http://{host-ip}:8080</a> to access the web interface.<ulstyle='padding-left:20px'><li>System Administrator: sysadmin@thingsboard.org / sysadmin</li><li>Tenant Administrator: tenant@thingsboard.org / tenant</li><li>Customer User: customer@thingsboard.org / customer</li>This template uses In Memory queue service, for other queue services, please check <a href='https://thingsboard.io/docs/user-guide/install/docker/'>Installing ThingsBoard using Docker</a> for more details."
    },
    {
      "categories": [
        "Database"
      ],
      "description": "TimescaleDB is a an open-source time-series database optimized for fast ingest and complex queries. ",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres Password",
          "default": "changeme",
          "description": "Password for Postgres"
        },
        {
          "name": "TIMESCALEDB_TELEMETRY",
          "label": "TimescaleDB telemetry",
          "default": "off",
          "description": "Set TimescaleDB telemetry to off to turn off telemetry, only works for if the cluster has not been initialized previously "
        },
        {
          "name": "timescaledb-tune",
          "label": "TimescaleDB max number of connections",
          "default": "true",
          "select": [
            {
              "text": "true",
              "value": "true"
            },
            {
              "text": "false",
              "value": "false"
            }
          ],
          "description": "Limiting the amount of resources the container can have on the host. If select ture, please update the following timescaledb-tune variables."
        },
        {
          "name": "TS_TUNE_MEMORY",
          "label": "TimescaleDB memory limitation",
          "description": "Optional. E.g. 2GB."
        },
        {
          "name": "TS_TUNE_NUM_CPUS",
          "label": "TimescaleDB CPUs",
          "description": "Optional. E.g. 4."
        },
        {
          "name": "TS_TUNE_MAX_BG_WORKERS",
          "label": "TimescaleDB max background workers",
          "description": "Optional. Specifize a maximum number of background workers."
        },
        {
          "name": "TS_TUNE_MAX_CONNS",
          "label": "TimescaleDB max number of connections",
          "description": "Optional. Specifize a maximum number of connections."
        }
      ],
      "image": "timescale/timescaledb:2.6.0-pg12",
      "logo": "https://github.com/RAKWireless/portainer-templates/blob/master/logo/timescale_logo.png?raw=true",
      "name": "TimeScaledb",
      "platform": "linux",
      "ports": [
        "5432:5432/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "TimescaleDB",
      "type": 1,
      "network": "bridge",
      "volumes": [
        {
          "bind": "/timescaledb/db-data",
          "container": "/var/lib/postgresql/data"
        }
      ],
      "note": "Please check <a href='https://github.com/timescale/timescaledb-docker'>TimescaleDB docker Github repository</a> for more details"
    },
    {
      "categories": [
        "Other"
      ],
      "description": "NATS is a simple, secure and performant communications system for digital systems, services and devices.",
      "image": "nats",
      "interactive": true,
      "command": "--http_port 8222",
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/nats_logo.jpg",
      "name": "nats",
      "platform": "linux",
      "ports": [
        "4222:4222/tcp",
        "8222:8222/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "NATS Server",
      "type": 1,
      "network": "bridge",
      "note": "To test the monitoring endpoint, browse to <a href='http://{host-ip}:8222'>http://{host-ip}:8222</a>.<br>Please check <a href='https://docs.nats.io/running-a-nats-service/nats_docker/nats-docker-tutorial'>NATS docker tutorial</a> for more details."
    },
    {
      "categories": [
        "Other"
      ],
      "description": "A tiny Docker image of iperf3 based on Alpine Linux for Network Performance and Bandwidth Testing.",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "Europe/London",
          "label": "Time Zone",
          "name": "TZ"
        },
        {
          "default": "-s",
          "label": "Iperf command to run in the container",
          "name": "command",
          "description": "Set to server mode by default, you can pass any parameters for the server here"
        },
        {
          "default": "5201",
          "label": "port",
          "name": "port",
          "description": "Server port that the container exposed for the server to listen on."
        }
      ],
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/iperf3_logo.png",
      "name": "iperf3-server",
      "platform": "linux",
      "repository": {
        "stackfile": "Stack/iperf3/iperf3.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "title": "iperf3-server",
      "type": 3,
      "note": "The template runs as an iperf3 server by default.<br> Run an iperf3 client with the following command in terminal:docker run --rm -t taoyou/iperf3-alpine:latest -c {server address}<br>Browse to <a href='https://hub.docker.com/r/taoyou/iperf3-alpine'>iperf3-alpine dockerhub quick reference</a> for more details."
    },
    {
      "categories": [
        "Other"
      ],
      "description": "TagoCore is a free, fast, and open-source IoT platform for edge computing.",
      "logo": "https://raw.githubusercontent.com/RAKWireless/portainer-templates/master/logo/tagocore_logo.png",
      "name": "TogoCore",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "TagoCore",
      "type": 3,
      "repository": {
        "stackfile": "Stack/tagocore/tagocore.yml",
        "url": "https://github.com/RAKWireless/portainer-templates"
      },
      "network": "bridge",
      "note": "Browse to <a href='http://{host-ip}:<8080'>http://{host-ip}:8080</a> to access the web interface."
    }
  ]
}
